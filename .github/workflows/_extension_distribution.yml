# Reusable workflow for building DuckDB extensions using a standardized environment
#
# The workflow:
#   - builds the extension using the CI workflow from the corresponding DuckDB version
#   - uploads the extensions as gh actions artifacts in the following format:
#         <ext_name>-<duckdb_version>-extension-<arch><optional_postfix>
#
# note: extensions are simply uploaded to GitHub actions, deploying the extensions is done a separate step. More info on
#       this can be found in https://github.com/duckdb/extension-template

name: Extension distribution
on:
  workflow_call:
    inputs:
      # The name with which the extension will be built
      extension_name:
        required: true
        type: string
      # DuckDB version to build against, should in most cases be identical to
      duckdb_version:
        required: true
        type: string
      # ';' separated list of architectures to exclude, for example: 'linux_amd64;osx_arm64'
      exclude_archs:
        required: false
        type: string
        default: "windows_amd64"
      # Postfix added to artifact names. Can be used to guarantee unique names when this workflow is called multiple times
      artifact_postfix:
        required: false
        type: string
        default: ""
      # Override the default vcpkg repository
      vcpkg_url:
        required: false
        type: string
        default: "https://github.com/microsoft/vcpkg.git"
      # Override the default vcpkg commit used by this version of DuckDB
      vcpkg_commit:
        required: false
        type: string
        default: "a1a1cbc975abf909a6c8985a6a2b8fe20bbd9bd6"
      # Override the default script producing the matrices. Allows specifying custom matrices.
      matrix_parse_script:
        required: false
        type: string
        default: "./duckdb/scripts/modify_distribution_matrix.py"
      # Enable building the DuckDB Shell
      build_duckdb_shell:
        required: false
        type: boolean
        default: true
      # Supply an override repository to build, instead of using the current one
      override_repository:
        required: false
        type: string
        default: ""
      # The git ref used for the override_repository
      override_ref:
        required: false
        type: string
        default: ""
      # Override the repo for the CI tools (for testing CI tools itself)
      override_ci_tools_repository:
        required: false
        type: string
        default: ""
jobs:
  generate_matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      windows_matrix: ${{ steps.set-matrix-windows.outputs.windows_matrix }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout current repository
        if: ${{inputs.override_repository == ''}}
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Checkout DuckDB to version
        run: |
          cd duckdb
          git checkout ${{ inputs.duckdb_version }}

      - id: parse-matrices
        run: |
          python3 ${{ inputs.matrix_parse_script }} --input ./duckdb/.github/config/distribution_matrix.json --select_os windows --output windows_matrix.json --exclude "${{ inputs.exclude_archs }}" --pretty

      - id: set-matrix-windows
        run: |
          windows_matrix="`cat windows_matrix.json`"
          echo windows_matrix=$windows_matrix >> $GITHUB_OUTPUT
          echo `cat $GITHUB_OUTPUT`

  windows:
    name: Windows
    runs-on: windows-2019
    needs: generate_matrix
    strategy:
      matrix: ${{fromJson(needs.generate_matrix.outputs.windows_matrix)}}
    env:
      BUILD_SHELL: ${{ inputs.build_duckdb_shell && '1' || '0' }}
      DUCKDB_PLATFORM: ${{ matrix.duckdb_arch }}
      CC: ${{ matrix.duckdb_arch == 'windows_amd64_rtools' && 'gcc' || '' }}
      CXX: ${{ matrix.duckdb_arch == 'windows_amd64_rtools' && 'g++' || '' }}

    steps:
      - name: Keep \n line endings
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v3
        name: Checkout current repository
        with:
          fetch-depth: 0
          submodules: 'true'

      - uses: r-lib/actions/setup-r@v2
        if: matrix.duckdb_arch == 'windows_amd64_rtools'
        with:
          r-version: 'devel'
          update-rtools: true
          rtools-version: '42' # linker bug in 43

      - name: Checkout DuckDB to version
        run: |
          cd duckdb
          git checkout ${{ inputs.duckdb_version }}

      - name: Initialise rtools SSL certs
        if: matrix.duckdb_arch == 'windows_amd64_rtools'
        shell: bash
        run: |
          bash -lc "echo"

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        continue-on-error: true
        with:
          key: ${{ github.job }}-${{ matrix.duckdb_arch }}

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-234567898765676564324234232

      - name: Generate Prime Numbers
        shell: bash
        run: |
          make release 
